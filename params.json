{
  "name": "Leku",
  "tagline": "Map location picker component for Android.",
  "body": "Leku, the map location component for Android\r\n============================================\r\n\r\n\"*Location and maps-based apps offer a compelling experience on mobile devices*\". That's how [Android Location documentation](https://developer.android.com/guide/topics/location/index.html?hl=es#location) starts, and that's true but Location is not always an easy due. You need to add layers, inputs for search, show results, control possible issues, add touch events, etc.\r\n\r\nFor our application, [Vibbo](https://play.google.com/store/apps/details?id=com.anuntis.segundamano), we thought that would be interesting to have an easy way to select a location for our searches. But not only searches could need it, also Ad insertion could benefit from it in different ways. And not only our app, also a lot of apps could benefit. So we decided to create a new component for android, test it in our app and bring it to the world.\r\n[*Leku*](https://github.com/SchibstedSpain/Leku) is the result of this process, a component with all you need to get locations and all the information related to in an easy way.\r\n\r\nWhat are the features of [*Leku*](https://github.com/SchibstedSpain/Leku)? You might ask. Here are some, and a small visual example:\r\n\r\n<img src=\"../media/screenshot.gif\" height=\"328px\" align=\"left\" />\r\n<img align=\"left\" width=\"0\" height=\"328px\" hspace=\"20\"/>\r\n\r\n* Search by Voice\r\n* Search by Text\r\n* Get your position by GPS or network\r\n* Pick locations using \"touch\" gestures on the map\r\n* Customization (Adapt to your Theme and you can customize some layouts)\r\n* Events Tracking, to know exactly what are doing your users.\r\n* Multi-language support (English and Spanish supported by default)\r\n<br><br><br>\r\n\r\n**Cool! Isn't it?**\r\n\r\nBut you not only would benefit from all this... We also removed all the hassle of controlling errors, permissions, and the lifecycle of the component. So we made it easy to add it in your application and forget those things, is a plug&play component.\r\n\r\n#### How I add it into my application?\r\n\r\nInclude the dependency:\r\n\r\n```groovy\r\ndependencies {\r\n    compile 'com.schibsted.android:leku:1.0.0'\r\n}\r\n```\r\n\r\nAdd the permissions needed in your manifest:\r\n\r\n```xml\r\n<uses-permission android:name=\"android.permission.INTERNET\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\r\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\r\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n```\r\n\r\nAdd the locationPickerActivity into your manifest too:\r\n\r\n```xml\r\n<activity\r\n    android:name=\"com.schibsted.maplocationpicker.LocationPickerActivity\"\r\n    android:label=\"@string/title_activity_location_picker\"\r\n    android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\"\r\n    android:launchMode=\"singleTop\"\r\n    android:windowSoftInputMode=\"adjustPan\"\r\n    android:parentActivityName=\".MainActivity\">\r\n    <intent-filter>\r\n        <action android:name=\"android.intent.action.SEARCH\" />\r\n    </intent-filter>\r\n    <meta-data android:name=\"android.app.searchable\"\r\n        android:resource=\"@xml/searchable\" />\r\n    <meta-data\r\n        android:name=\"android.support.PARENT_ACTIVITY\"\r\n        android:value=\".MainActivity\" />\r\n</activity>\r\n```\r\n\r\nThen you have setup the call to start this activity wherever you like, always as startActivityForResult:\r\n\r\n```java\r\nIntent i = new Intent(this, LocationPickerActivity.class);\r\nstartActivityForResult(i, 1);\r\n```\r\n\r\nAnd add the response code from that activity:\r\n\r\n```java\r\n\r\n@Override\r\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\r\n    if (requestCode == 1) {\r\n        if(resultCode == RESULT_OK){\r\n            double latitude = data.getDoubleExtra(LocationPickerActivity.LATITUDE, 0);\r\n            Log.d(\"LATITUDE****\", String.valueOf(latitude));\r\n            double longitude = data.getDoubleExtra(LocationPickerActivity.LONGITUDE, 0);\r\n            Log.d(\"LONGITUDE****\", String.valueOf(longitude));\r\n            String address = data.getStringExtra(LocationPickerActivity.LOCATION_ADDRESS);\r\n            Log.d(\"ADDRESS****\", String.valueOf(address));\r\n            String postalcode = data.getStringExtra(LocationPickerActivity.ZIPCODE);\r\n            Log.d(\"POSTALCODE****\", String.valueOf(postalcode));\r\n            Bundle bundle = data.getBundleExtra(LocationPickerActivity.TRANSITION_BUNDLE);\r\n            Log.d(\"BUNDLE TEXT****\", bundle.getString(\"test\"));\r\n            Address fullAddress = data.getParcelableExtra(LocationPickerActivity.ADDRESS);\r\n            Log.d(\"FULL ADDRESS****\", fullAddress.toString());\r\n        }\r\n        if (resultCode == RESULT_CANCELED) {\r\n            //Write your code if there's no result\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThat's all folks! Quick and Easy!\r\n\r\nIf you want more information on how to customize this component and know more about it, check out the [*official repository*](https://github.com/SchibstedSpain/Leku). Enjoy!\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}